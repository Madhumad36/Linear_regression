# -*- coding: utf-8 -*-
"""Pricingprediction/ML.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cvJm_vAXw8MffnkpJ6R-yh5dTXGfBT0O

#Importing libraries
"""

#--importing libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

from sklearn.datasets import fetch_california_housing
data = fetch_california_housing(as_frame=True)
df = data.frame

"""#Data Handling"""

df.head()

df.tail()

df.columns

df.shape

df.info()

df.describe()

"""#Model preparation

"""

# Select features and target
X = df[['MedInc', 'AveRooms']]  # Features
y = df['MedHouseVal']           # Target

# Split into training and testing
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# Initializing model
model = LinearRegression()

# Training model
model.fit(X_train, y_train)

# Model's coefficients
print("Intercept:", model.intercept_)
print("Coefficients:", model.coef_)

# Predict on test data
y_pred = model.predict(X_test)

# Display first 5 predictions vs actual values
comparison = pd.DataFrame({
    'Actual': y_test.values[:5],
    'Predicted': y_pred[:5]
})
comparison

"""#Evaluating the model"""

# Evaluation metrics
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", round(mse, 3))
print("RÂ² Score:", round(r2, 3))

"""#Visualizing the model"""

plt.scatter(y_test, y_pred, alpha=0.6, color='purple')
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual vs Predicted Housing Prices")
plt.show()

plt.scatter(df['MedInc'], df['MedHouseVal'], color='orange', alpha=0.5)
plt.xlabel("Median Income")
plt.ylabel("Median House Value")
plt.title("Median Income vs House Value")
plt.show()